{"version":3,"file":"static/js/832.b532c41d.chunk.js","mappings":"yMAGA,MCH+D,GAAgBA,aDG1D,CACjBC,KAAM,gBACNC,QAAS,8MAKTC,YAAa,6EACbC,YAAa,qBACbC,IAAK,m9EA0ELC,QAAS,CACLC,QAAQ,EACRC,UAAW,sBACXC,MAAO,6HAMPC,KAAM,CAAC,CACXC,MAAO,uCACPR,YAAa,uCACbS,KAAM,ojSA8LNC,MAAO,CAAC,CACRZ,KAAM,eACNG,YAAa,qBACbU,UAAW,GACb,CACEb,KAAM,cACNG,YAAa,mBACbU,U,UACF,CACEb,KAAM,IACNG,YAAa,SACbU,U,YAEF,CACEH,MAAO,mDACPR,YAAa,mDACbS,KAAM,q8DA8BNC,MAAO,CAAC,CACRZ,KAAM,eACNG,YAAa,qBACbU,UAAW,SChVFC,EAAW,CAAC,KAAO,gBAAgB,QAAU,QAAQ,gBAAe,EAAK,aAAa,iBAAiB,QAAU,CAAC,CAAC,KAAO,gBAAgB,QAAU,gDAAgD,YAAc,6EAAsB,YAAc,uB","sources":["../../README.md","../node_modules/readme/modules.js"],"sourcesContent":["import * as component_1 from '@kne/remote-loader';\nimport * as component_2 from 'react-router-dom';\nimport * as component_3 from 'lodash';\nconst readmeConfig = {\n    name: `remote-loader`,\n    summary: `<p>加载一个webpack5生成的邦联模块</p>\n<ul>\n<li>支持自定义加载url</li>\n<li>支持子模块加载</li>\n</ul>`,\n    description: `加载一个webpack5生成的邦联模块`,\n    packageName: `@kne/remote-loader`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fallback</td>\n<td>组件加载时渲染的loading组件</td>\n<td>jsx</td>\n<td>null</td>\n</tr>\n<tr>\n<td>remoteError</td>\n<td>组件加载失败时渲染的组件</td>\n<td>jsx</td>\n<td>null</td>\n</tr>\n<tr>\n<td>module</td>\n<td>[模块地址/remote/version:]模块名[@子模块][.模块属性]</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onLoadComplete</td>\n<td>当组件加载完成并且mount完毕的时候调用该方法</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>其他属性将传给远程组件</p>\n<h4>withRemoteLoader</h4>\n<p>注意: 推荐使用createWithRemoteLoader，如果必须使用该高阶组件请将modules参数包裹在useMemo里面或者放在组件外边，防止由于其父组件render导致其引用地址发生变化触发不必要的render</p>\n<p>withRemoteLoader(WrappedComponent)</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fallback</td>\n<td>组件加载时渲染的loading组件</td>\n<td>jsx</td>\n<td>null</td>\n</tr>\n<tr>\n<td>remoteError</td>\n<td>组件加载失败时渲染的组件</td>\n<td>jsx</td>\n<td>null</td>\n</tr>\n<tr>\n<td>modules</td>\n<td>一个模块token数组，模块token的格式为：[模块地址/remote/version:]模块名[@子模块][.模块属性]</td>\n<td>array</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>createWithRemoteLoader</h4>\n<p>withRemoteLoader的高阶函数，可以将部分参数提前传入，不必在调用withRemoteLoader(WrappedComponent) 时再传入参数</p>\n<h4>preset</h4>\n<p>可以设置预置参数 preset({remotes,fallback,error});</p>`,\n    example: {\n        isFull: true,\n        className: `remote_loader_4f65d`,\n        style: `.remote_loader_4f65d .ant-space-vertical {\n  width: 100%; }\n\n.remote_loader_4f65d .container {\n  background: #FFF; }\n`,\n        list: [{\n    title: `加载一个模块`,\n    description: `加载一个模块`,\n    code: `const {default: Remote, preset} = remoteLoader;\nconst {range} = _;\n\nconst BaseExample = () => {\n    return <div>\n        <Remote module=\"components-core:Content\"\n                list={[{label: '标题', content: '内容'}, {label: '标题标题', content: '内容内容'}, {\n                    label: '标题标', content: '内容内容内容内容内容内容内容内容内容内容'\n                }, {\n                    label: '标题标题标题',\n                    content: '内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容'\n                }]}/>\n        <Remote module=\"components-core:Table\"\n            name=\"test-table\" dataSource={[\n                {\n                    id: 0,\n                    date: \"2021-07-21\",\n                    datetime: \"2023-07-22 09:00:00\",\n                    serialNumber: \"SX00192932323434\",\n                    serialNumberShort: \"SH0023\",\n                    userName: \"林珊珊\",\n                    title: \"我是主要字段\",\n                    tagEnum: null,\n                    enUserName: \"Lin Shanshan\",\n                    phoneNumber: \"+86 18792877372\",\n                    email: \"a@a.com\",\n                    count: 4,\n                    description:\n                        \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n                    description2:\n                        \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n                    other: \"其他信息\",\n                },\n                {\n                    id: 1,\n                    date: \"\",\n                    datetime: \"2023-07-22 09:00:00\",\n                    serialNumber: \"SX00192932323434\",\n                    serialNumberShort: \"SH0023\",\n                    userName: \"林珊珊1\",\n                    title: \"我是主要字段\",\n                    tagEnum: \"Y\",\n                    enUserName: \"Lin Shanshan\",\n                    phoneNumber: null,\n                    email: \"a@a.com\",\n                    count: 5,\n                    description: \"我是一段描述\",\n                    description2: \"我是一段描述\",\n                    other: \"其他信息\",\n                },\n            ]}\n            columns={[\n                {\n                    name: \"date\",\n                    title: \"日期\",\n                    type: \"date\",\n                    hover: true,\n                },\n                {\n                    name: \"datetime\",\n                    title: \"日期时间\",\n                    type: \"datetime\",\n                    hideSecond: true,\n                },\n                {\n                    name: \"serialNumber\",\n                    title: \"编号\",\n                    type: \"serialNumber\",\n                    primary: true,\n                    onClick: async (item) => {\n                        console.log(item);\n                        return new Promise((resolve) => {\n                            setTimeout(() => {\n                                resolve(true);\n                            }, 10000);\n                        });\n                    },\n                },\n                {\n                    name: \"serialNumberShort\",\n                    title: \"短编号\",\n                    type: \"serialNumberShort\",\n                },\n                {\n                    name: \"title\",\n                    title: \"主要信息\",\n                    type: \"mainInfo\",\n                },\n                {\n                    name: \"tag\",\n                    title: \"状态标签\",\n                    type: \"tag\",\n                    valueOf: () => ({ type: \"success\", text: \"审核通过\" }),\n                },\n                {\n                    name: \"tagEnum\",\n                    title: \"标签枚举\",\n                    type: \"tag\",\n                    valueOf: (item) =>\n                        item.tagEnum && {\n                            type: \"success\",\n                            isEnum: true,\n                            moduleName: \"marital\",\n                            name: item.tagEnum,\n                        },\n                },\n                {\n                    name: \"avatar\",\n                    title: \"头像\",\n                    type: \"avatar\",\n                    valueOf: () => ({ gender: \"F\" }),\n                },\n                {\n                    name: \"user\",\n                    title: \"用户\",\n                    type: \"user\",\n                    valueOf: (item) => \\`\\${item.enUserName} \\${item.userName}\\`,\n                },\n                {\n                    name: \"hideInfo\",\n                    title: \"隐藏字段\",\n                    type: \"hideInfo\",\n                    valueOf: (item) =>\n                        item[\"phoneNumber\"] && {\n                            loader: () => {\n                                return item[\"phoneNumber\"] + \"-\" + item[\"id\"];\n                            },\n                        },\n                },\n                {\n                    name: \"userName\",\n                    title: \"用户名\",\n                    type: \"userName\",\n                },\n                {\n                    name: \"contacts\",\n                    title: \"联系人\",\n                    type: \"contacts\",\n                    valueOf: (item) => \\`\\${item.userName} \\${item.phoneNumber}\\`,\n                },\n                {\n                    name: \"count\",\n                    title: \"数量\",\n                    type: \"singleRow\",\n                    render: ({ target }) => {\n                        return target.count === 5 ? { hover: true } : { hover: false };\n                    },\n                },\n                {\n                    name: \"description\",\n                    title: \"描述\",\n                    type: \"description\",\n                },\n                {\n                    name: \"description2\",\n                    title: \"描述(省略)\",\n                    type: \"description\",\n                    ellipsis: true,\n                },\n                {\n                    name: \"other\",\n                    title: \"其他\",\n                    type: \"other\",\n                    hover: true,\n                },\n                {\n                    name: \"options\",\n                    title: \"操作\",\n                    type: \"options\",\n                    valueOf: (item) => [\n                        {\n                            onClick: () => {\n                                return new Promise((resolve) => {\n                                    setTimeout(() => {\n                                        resolve();\n                                    }, 1000);\n                                });\n                            },\n                            children: \"分配Program及教练\",\n                        }\n                    ],\n                },\n            ]}\n        />\n    </div>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_1\n},{\n    name: \"reactRouter\",\n    packageName: \"react-router-dom\",\n    component: component_2\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_3\n}]\n},{\n    title: `加载一个属性模块`,\n    description: `加载一个属性模块`,\n    code: `const {default: Remote} = remoteLoader;\nconst BaseExample = () => {\n    return <Remote module=\"InfoPage\">\n        <Remote module=\"InfoPage.Part\" title=\"退票信息\">\n            <Remote module=\"Descriptions\"\n                    dataSource={[[{label: \"客户名称\", content: \"腾讯\"}, {\n                        label: \"发票抬头\", content: \"腾讯科技公司\"\n                    }], [{label: \"发票类型\", content: \"增值税专用发票\"}, {\n                        label: \"发票开具日期\", content: \"2022-08-15\"\n                    }], [{label: \"退票金额\", content: \"22000.00元\"}], [{\n                        label: \"发票号\", content: <div>\n                            <div>00384895992774</div>\n                            <div>00384895992774</div>\n                            <div>00384895992774</div>\n                            <div>00384895992774</div>\n                        </div>\n                    }], [{label: \"是否需要重开发票\", content: \"否\"}, {\n                        label: \"是否涉及金融变动\", content: \"否\"\n                    }], [{label: \"是否造成实质损失\", content: \"否\"}, {\n                        label: \"责任归属\", content: \"客户原因\"\n                    }], [{label: \"退票原因\", content: \"退票原因的描述退票原因的描述退票原因的描\"}], [{\n                        label: \"附件\", content: \"附件名称\"\n                    }], [{label: \"操作时间\", content: \"2022-08-01 16:32\"}, {label: \"操作人\", content: \"西西歪\"}]]}/>\n        </Remote>\n    </Remote>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_1\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import RemoteLoader from '@components/remote-loader/README.md';export default {RemoteLoader};\nexport const manifest = {\"name\":\"remote-loader\",\"version\":\"1.2.3\",\"open-version\":true,\"public-url\":\"/remote-loader\",\"modules\":[{\"name\":\"remote-loader\",\"baseDir\":\"/home/runner/work/remote-loader/remote-loader\",\"description\":\"加载一个webpack5生成的邦联模块\",\"packageName\":\"@kne/remote-loader\"}]};"],"names":["RemoteLoader","name","summary","description","packageName","api","example","isFull","className","style","list","title","code","scope","component","manifest"],"sourceRoot":""}